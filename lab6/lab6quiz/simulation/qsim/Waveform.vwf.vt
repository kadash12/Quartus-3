// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/19/2019 14:44:45"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          LAB6_Part2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module LAB6_Part2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CIN;
reg MemCLK;
reg RESET;
// wires                                               
wire A0;
wire A1;
wire A2;
wire A3;
wire [14:0] Addr;
wire B0;
wire B1;
wire B2;
wire B3;
wire CLK;
wire COUT;
wire [7:0] D;
wire IR0;
wire IR1;
wire IR2;
wire IRLD;
wire MSA0;
wire MSA1;
wire MSB0;
wire MSB1;
wire MSC0;
wire MSC1;
wire MSC2;
wire OUT0;
wire OUT1;
wire OUT2;
wire OUT3;
wire PCINC;
wire PCLD;

// assign statements (if any)                          
LAB6_Part2 i1 (
// port map - connection between master ports and signals/registers   
	.A0(A0),
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.Addr(Addr),
	.B0(B0),
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.CIN(CIN),
	.CLK(CLK),
	.COUT(COUT),
	.D(D),
	.IR0(IR0),
	.IR1(IR1),
	.IR2(IR2),
	.IRLD(IRLD),
	.MemCLK(MemCLK),
	.MSA0(MSA0),
	.MSA1(MSA1),
	.MSB0(MSB0),
	.MSB1(MSB1),
	.MSC0(MSC0),
	.MSC1(MSC1),
	.MSC2(MSC2),
	.OUT0(OUT0),
	.OUT1(OUT1),
	.OUT2(OUT2),
	.OUT3(OUT3),
	.PCINC(PCINC),
	.PCLD(PCLD),
	.RESET(RESET)
);
initial 
begin 
#1000000 $finish;
end 

// MemCLK
always
begin
	MemCLK = 1'b0;
	MemCLK = #25000 1'b1;
	#25000;
end 

// RESET
initial
begin
	RESET = 1'b1;
end 

// CIN
initial
begin
	CIN = 1'b0;
end 
endmodule

