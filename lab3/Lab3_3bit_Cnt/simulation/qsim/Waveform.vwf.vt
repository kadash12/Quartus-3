// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/11/2019 23:32:40"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Lab3_3bit_Cnt
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab3_3bit_Cnt_vlg_vec_tst();
// constants                                           
// general purpose registers
reg B;
reg CLK;
reg F;
reg Reset0;
reg Reset1;
reg Reset2;
reg Set0;
reg Set1;
reg Set2;
// wires                                               
wire Q0;
wire Q1;
wire Q2_L;
wire Sp;

// assign statements (if any)                          
Lab3_3bit_Cnt i1 (
// port map - connection between master ports and signals/registers   
	.B(B),
	.CLK(CLK),
	.F(F),
	.Q0(Q0),
	.Q1(Q1),
	.Q2_L(Q2_L),
	.Reset0(Reset0),
	.Reset1(Reset1),
	.Reset2(Reset2),
	.Set0(Set0),
	.Set1(Set1),
	.Set2(Set2),
	.Sp(Sp)
);
initial 
begin 
#1200000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #50000 1'b1;
	#50000;
end 

// Reset2
initial
begin
	Reset2 = 1'b0;
	Reset2 = #100000 1'b1;
	Reset2 = #225000 1'b0;
	Reset2 = #75000 1'b1;
end 

// Reset1
initial
begin
	Reset1 = 1'b0;
	Reset1 = #100000 1'b1;
	Reset1 = #225000 1'b0;
	Reset1 = #75000 1'b1;
end 

// Reset0
initial
begin
	Reset0 = 1'b0;
	Reset0 = #100000 1'b1;
	Reset0 = #225000 1'b0;
	Reset0 = #75000 1'b1;
end 

// Set2
initial
begin
	Set2 = 1'b1;
	Set2 = #425000 1'b0;
	Set2 = #75000 1'b1;
end 

// Set1
initial
begin
	Set1 = 1'b1;
	Set1 = #425000 1'b0;
	Set1 = #75000 1'b1;
end 

// Set0
initial
begin
	Set0 = 1'b1;
	Set0 = #125000 1'b0;
	Set0 = #75000 1'b1;
end 

// F
initial
begin
	F = 1'b1;
end 

// B
initial
begin
	B = 1'b1;
end 
endmodule

